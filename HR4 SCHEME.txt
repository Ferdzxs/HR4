users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) UNIQUE NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  role_id INT,
  employee_id INT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (role_id) REFERENCES roles(id),
  FOREIGN KEY (employee_id) REFERENCES employees(id)
);

roles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  role_name VARCHAR(50) NOT NULL,
  permissions JSON,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

user_sessions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  session_token VARCHAR(255),
  expires_at TIMESTAMP,
  ip_address VARCHAR(45),
  FOREIGN KEY (user_id) REFERENCES users(id)
);

employees (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_number VARCHAR(50) UNIQUE NOT NULL,
  first_name VARCHAR(100),
  last_name VARCHAR(100),
  department_id INT,
  position_id INT,
  hire_date DATE,
  status ENUM('Active','Inactive','Resigned','Terminated','Retired'),
  FOREIGN KEY (department_id) REFERENCES departments(id),
  FOREIGN KEY (position_id) REFERENCES positions(id)
);

employee_details (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  birth_date DATE,
  gender ENUM('M','F','Other'),
  civil_status ENUM('Single','Married','Widowed'),
  contact_number VARCHAR(20),
  email VARCHAR(100),
  address TEXT,
  emergency_contact_name VARCHAR(100),
  emergency_contact_number VARCHAR(20),
  sss_no VARCHAR(50),
  philhealth_no VARCHAR(50),
  pagibig_no VARCHAR(50),
  tin_no VARCHAR(50),
  employment_type ENUM('Regular','Contractual','Probationary','Part-time'),
  resignation_date DATE,
  FOREIGN KEY (employee_id) REFERENCES employees(id)
);

departments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  department_name VARCHAR(100),
  department_head_id INT,
  parent_department_id INT NULL,
  budget_allocation DECIMAL(12,2),
  FOREIGN KEY (department_head_id) REFERENCES employees(id),
  FOREIGN KEY (parent_department_id) REFERENCES departments(id)
);

positions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  position_title VARCHAR(100),
  salary_grade_id INT,
  job_description TEXT,
  reports_to_position_id INT NULL,
  FOREIGN KEY (salary_grade_id) REFERENCES salary_grades(id),
  FOREIGN KEY (reports_to_position_id) REFERENCES positions(id)
);

employee_documents (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  document_type VARCHAR(100),
  file_path VARCHAR(255),
  upload_date DATE,
  FOREIGN KEY (employee_id) REFERENCES employees(id)
);

salary_grades (
  id INT AUTO_INCREMENT PRIMARY KEY,
  grade_level VARCHAR(20),
  min_salary DECIMAL(10,2),
  max_salary DECIMAL(10,2)
);

payroll_periods (
  id INT AUTO_INCREMENT PRIMARY KEY,
  period_start DATE,
  period_end DATE,
  status ENUM('Open','Processed','Closed'),
  processed_date DATE
);

payroll_entries (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  period_id INT,
  basic_salary DECIMAL(10,2),
  overtime DECIMAL(10,2),
  deductions DECIMAL(10,2),
  net_pay DECIMAL(10,2),
  FOREIGN KEY (employee_id) REFERENCES employees(id),
  FOREIGN KEY (period_id) REFERENCES payroll_periods(id)
);

salary_components (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  component_type ENUM('Allowance','Bonus','HazardPay','LoanDeduction','Other'),
  amount DECIMAL(10,2),
  effective_date DATE,
  FOREIGN KEY (employee_id) REFERENCES employees(id)
);

employee_loans (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  loan_type VARCHAR(50),
  loan_amount DECIMAL(12,2),
  balance DECIMAL(12,2),
  monthly_deduction DECIMAL(10,2),
  start_date DATE,
  end_date DATE,
  status ENUM('Active','Closed'),
  FOREIGN KEY (employee_id) REFERENCES employees(id)
);

government_contributions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  period_id INT,
  contribution_type ENUM('SSS','PhilHealth','PagIBIG'),
  amount DECIMAL(10,2),
  FOREIGN KEY (employee_id) REFERENCES employees(id),
  FOREIGN KEY (period_id) REFERENCES payroll_periods(id)
);

tax_calculations (
  id INT AUTO_INCREMENT PRIMARY KEY,
  payroll_entry_id INT,
  taxable_income DECIMAL(10,2),
  withholding_tax DECIMAL(10,2),
  tax_period DATE,
  FOREIGN KEY (payroll_entry_id) REFERENCES payroll_entries(id)
);

bank_accounts (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  bank_name VARCHAR(100),
  account_number VARCHAR(50),
  FOREIGN KEY (employee_id) REFERENCES employees(id)
);

providers (
  id INT AUTO_INCREMENT PRIMARY KEY,
  provider_name VARCHAR(100),
  contact_info TEXT
);

hmo_plans (
  id INT AUTO_INCREMENT PRIMARY KEY,
  plan_name VARCHAR(100),
  provider_id INT,
  premium_amount DECIMAL(10,2),
  coverage_details TEXT,
  FOREIGN KEY (provider_id) REFERENCES providers(id)
);

benefit_enrollments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  plan_id INT,
  enrollment_date DATE,
  status ENUM('Active','Inactive'),
  FOREIGN KEY (employee_id) REFERENCES employees(id),
  FOREIGN KEY (plan_id) REFERENCES hmo_plans(id)
);

benefit_dependents (
  id INT AUTO_INCREMENT PRIMARY KEY,
  enrollment_id INT,
  dependent_name VARCHAR(100),
  relationship VARCHAR(50),
  birth_date DATE,
  FOREIGN KEY (enrollment_id) REFERENCES benefit_enrollments(id)
);

benefit_claims (
  id INT AUTO_INCREMENT PRIMARY KEY,
  employee_id INT,
  plan_id INT,
  claim_amount DECIMAL(10,2),
  claim_date DATE,
  status ENUM('Pending','Approved','Rejected','Paid'),
  FOREIGN KEY (employee_id) REFERENCES employees(id),
  FOREIGN KEY (plan_id) REFERENCES hmo_plans(id)
);

analytics_metrics (
  id INT AUTO_INCREMENT PRIMARY KEY,
  metric_type VARCHAR(100),
  metric_value DECIMAL(12,2),
  calculation_date DATE,
  department_id INT,
  FOREIGN KEY (department_id) REFERENCES departments(id)
);

report_templates (
  id INT AUTO_INCREMENT PRIMARY KEY,
  report_name VARCHAR(100),
  report_type VARCHAR(50),
  template_config JSON
);

audit_logs (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  action_type VARCHAR(50),
  table_affected VARCHAR(100),
  old_values JSON,
  new_values JSON,
  timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id)
);